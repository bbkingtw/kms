include base.jade
script(src='/cdn/jquery')

style.
	body {
		background-color:#ddffdd;
	}

	.component {
		margin-left:15px;
		margin-bottom:10px;
		min-width:330px;
	}

mixin draw_form(inputs, ovalues)
	for e in inputs
		if ovalues
			- oval=ovalues[e.fname];

		label=e.fname+'('+e.ftype+')'
		br
		- oval=oval||e.default
		case e.ftype
			when 'select'
				select.component(id=e.fname, name=e.fname,|
					nullable=e.nullable, value=oval) 
					if e.values
						-xval=typeof e.values=='string'?e.values.split(','):e.values;
						for v in xval
							if v==oval
								option(val=v,selected)=v
							else
								option(val=v)=v
			default
				if e.ftype=='string'	
					- etype=e.encrypted||'no';
					- etype=(etype=='yes') ? 'password' :'text';
				else
					- etype=e.ftype

				input.component(id=e.fname, name=e.fname, type=etype,|
					nullable=e.nullable, value=oval)
		br

form(method='post', action=action_url)
	+draw_form(inputs, values)
	button.submit submit

a(href='/kms/single_row/edit/'+prev_row) prev_row
a(href='/kms/single_row/edit/'+next_row) next_row

script.
	var log=console.log;

	function validate(cb){	
		var err=null;

		$('.component').map(function(e){
			var $this=e;
			var nullable=$(this).attr('nullable')||'yes';
			var vnull=$(this).val().length==0;
			var fname=$(this).attr('id');
			//log(nullable, vnull);

			if (nullable=='no' && vnull) {
				var warn=$('<span />').addClass('warn')
					.text('must have value')
					.css('color','red');
				$(this).after(warn);
				$(this).css('background-color','yellow');
				$(this).focus();
				if (!err) err=$(this);
			}
		});	

		cb(err)
	}

	$(function(){
		$('.component').keypress(function(e){
			if (e.which==13){
				var index = $('.component').index(this) + 1;
				$('.component').eq(index).focus();
			}
		});

		$('button.submit').click(function(e){
			var form=$(this).closest('form');
			var table=$('table');
			var url=$(form).attr('action');
			var tr=$('this').closest('tr');
			
			$('span.warn').remove();
			e.preventDefault();
			validate(function(err){
				log('err',err);
				if (err) {
					log('error');
					$(err).focus();
				}
				else {
					var $inputs = $(form).find(':input');
					var values = {};
					$inputs.each(function() {
						values[this.name] = $(this).val();
					});
					//if (values.length==0) return $(form).submit();
					if ($('table').length==0)return $(form).submit();

					$.post(url, $inputs, function(data){
						var row_updated=data.row_updated;
						var id=row_updated.id;
						log('data',data);
				
						alert(data.status);
						if (data.status=='done') {
							var tgt;
							$(table).find('td#id').map(function(x){
								alert($(this).text()+','+id);
								if ($(this).text()==id)	{
									tgt=$(this).closest('tr');	
								}
							});

							tgt.find('td').map(function(e){
								var field_name=$(this).attr('id');
								alert(field_name);
								$(this).text(row_updated[field_name]);
							});
						}
						log(data)
					});
				}
			});
		});
	});
